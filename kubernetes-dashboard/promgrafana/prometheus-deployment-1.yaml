apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: prometheus-server
  name: prometheus-deployment
  namespace: monitoring
spec:
  progressDeadlineSeconds: 600
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app: prometheus-server
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      creationTimestamp: null
      labels:
        app: prometheus-server
    spec:
      containers:
      - args:
        - --config.file=/etc/prometheus/prometheus.yml
        - --storage.tsdb.path=/prometheus/
        - --storage.tsdb.min-block-duration=2h
        - --storage.tsdb.max-block-duration=2h
        - --storage.tsdb.retention.size=8GB
        - --storage.tsdb.retention.time=7d
        - --storage.tsdb.no-lockfile
        - --storage.tsdb.wal-compression
        image: docker.rril.ril.com/elk/prometheus:v2.28.0
        imagePullPolicy: IfNotPresent
        name: prometheus
        ports:
        - containerPort: 9090
          protocol: TCP
        resources:
          limits:
            cpu: "4"
            memory: 16G
          requests:
            cpu: "2"
            memory: 8G
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        volumeMounts:
        - mountPath: /etc/prometheus/
          name: prometheus-config-volume
        - mountPath: /prometheus/
          name: prometheuspvc
      dnsPolicy: ClusterFirst
      nodeSelector:
        kubernetes.io/hostname: sidcprdk8msn01
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: 30
      tolerations:
      - effect: NoSchedule
        key: node-role.kubernetes.io/master
      volumes:
      - configMap:
          defaultMode: 420
          name: prometheus-server-conf
        name: prometheus-config-volume
      - name: prometheuspvc
        hostPath:
          path: /opt/prometheus
          type: ""
